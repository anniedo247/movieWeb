{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Data/coderSchool/myReact/ashley_movieweb/src/pages/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"../App.css\";\nimport PublicNavBar from \"../components/PublicNavBar\";\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieList = ({\n  type\n}) => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      let endpoint = \"now_playing\";\n\n      if (type === \"top_rated\") {\n        endpoint = \"top_rated\";\n      }\n\n      if (type === \"upcoming\") {\n        endpoint = \"upcoming\";\n      }\n\n      const url = `${API_URL}/movie/${endpoint}?api_key=${API_KEY}`;\n      console.log(url);\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovies(data.results);\n      console.log(movies);\n    };\n\n    fetchData();\n  }, [type]); // const handleSearchTermChange = (e)=>{\n  //   setSearchTerm(e.target.value)\n  //   console.log(e.target.value);\n  // }\n  // useEffect (()=>{\n  //   const newMovies = movies.filter(m=> m.title.startWith(searchTerm));\n  //   setMovies(newMovies)\n  // },[searchTerm])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-wrap justify-content-between\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"col-xscol-md-6 col-lg-4 mt-5\",\n        style: {\n          width: \"18em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.release_date.substring(0, 4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"\\u2665 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.popularity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-3\",\n              style: {\n                color: \"red\"\n              },\n              children: [\"\\u2B50\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"aQi/tms59DsvcxPuc/aDP6Uhs+E=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Volumes/Data/coderSchool/myReact/ashley_movieweb/src/pages/MovieList.js"],"names":["React","useState","useEffect","Card","Container","PublicNavBar","API_KEY","API_URL","MovieList","type","movies","setMovies","searchTerm","setSearchTerm","fetchData","endpoint","url","console","log","respone","fetch","data","json","results","map","movie","width","poster_path","title","release_date","substring","color","popularity","vote_average","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"../App.css\";\nimport PublicNavBar from \"../components/PublicNavBar\";\n\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieList = ({ type }) => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let endpoint = \"now_playing\";\n      if (type === \"top_rated\") {\n        endpoint = \"top_rated\";\n      }\n      if (type === \"upcoming\") {\n        endpoint = \"upcoming\";\n      }\n      const url = `${API_URL}/movie/${endpoint}?api_key=${API_KEY}`;\n      console.log(url);\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovies(data.results);\n      console.log(movies);\n    };\n    fetchData();\n  }, [type]);\n\n  // const handleSearchTermChange = (e)=>{\n  //   setSearchTerm(e.target.value)\n  //   console.log(e.target.value);\n  // }\n  // useEffect (()=>{\n  //   const newMovies = movies.filter(m=> m.title.startWith(searchTerm));\n  //   setMovies(newMovies)\n  // },[searchTerm])\n\n  return (\n    <div>\n      <Container className=\"d-flex flex-wrap justify-content-between\">\n\n      </Container>\n        {movies.map((movie) => (\n          <div>\n            <Card key={movie.id} className=\"col-xscol-md-6 col-lg-4 mt-5\" style={{ width:\"18em\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              />\n              <Card.Body>\n                <Card.Title>{movie.title}</Card.Title>\n                <Card.Text>\n                  <span>{movie.release_date.substring(0, 4)}</span>\n                </Card.Text>\n                <Card.Text>\n                  <span style={{ color: \"red\" }}>♥ </span>{\" \"}\n                  <span>{movie.popularity}</span>\n                  <span className=\"ml-3\" style={{ color: \"red\" }}>\n                    ⭐{\" \"}\n                  </span>{\" \"}\n                  <span>{movie.vote_average}</span>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        ))}\n     \n    </div>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}